{
  "version": 3,
  "sources": ["../../../../../Modules/Administration/Role/RolePage.ts", "../../../../../Modules/Administration/RolePermission/RolePermissionDialog.ts", "../../../../../Modules/ServerTypes/Texts.ts", "../../../../../Modules/Administration/Role/RoleDialog.ts", "../../../../../Modules/Administration/Role/RoleGrid.ts"],
  "sourcesContent": ["import { initFullHeightGridPage } from \"@serenity-is/corelib/q\"\r\nimport { RoleGrid } from \"./RoleGrid\";\r\n\r\n$(function() {\r\n    initFullHeightGridPage(new RoleGrid($('#GridDiv')).element);\r\n});", "import { Decorators, TemplatedDialog } from \"@serenity-is/corelib\";\r\nimport { format, getRemoteData, notifySuccess, text } from \"@serenity-is/corelib/q\";\r\nimport { RolePermissionService, UserPermissionRow } from \"../\";\r\nimport { PermissionCheckEditor } from \"../UserPermission/PermissionCheckEditor\";\r\n\r\n@Decorators.registerClass()\r\nexport class RolePermissionDialog extends TemplatedDialog<RolePermissionDialogOptions> {\r\n\r\n    private permissions: PermissionCheckEditor;\r\n\r\n    constructor(opt: RolePermissionDialogOptions) {\r\n        super(opt);\r\n\r\n        this.permissions = new PermissionCheckEditor(this.byId('Permissions'), {\r\n            showRevoke: false\r\n        });\r\n\r\n        RolePermissionService.List({\r\n            RoleID: this.options.roleID,\r\n            Module: null,\r\n            Submodule: null\r\n        }, response => {\r\n            this.permissions.value = response.Entities.map(x => (<UserPermissionRow>{ PermissionKey: x }));\r\n        });\r\n\r\n        this.permissions.implicitPermissions = getRemoteData('Administration.ImplicitPermissions');\r\n    }\r\n\r\n    protected getDialogOptions(): JQueryUI.DialogOptions {\r\n        let opt = super.getDialogOptions();\r\n\r\n        opt.buttons = [\r\n            {\r\n                text: text('Dialogs.OkButton'),\r\n                click: e => {\r\n                    RolePermissionService.Update({\r\n                        RoleID: this.options.roleID,\r\n                        Permissions: this.permissions.value.map(x => x.PermissionKey),\r\n                        Module: null,\r\n                        Submodule: null\r\n                    }, response => {\r\n                        this.dialogClose();\r\n                        window.setTimeout(() => notifySuccess(text('Site.RolePermissionDialog.SaveSuccess')), 0);\r\n                    });\r\n                }\r\n            }, {\r\n                text: text('Dialogs.CancelButton'),\r\n                click: () => this.dialogClose()\r\n            }];\r\n\r\n        opt.title = format(text('Site.RolePermissionDialog.DialogTitle'),\r\n            this.options.title);\r\n\r\n        return opt;\r\n    }\r\n\r\n    protected getTemplate(): string {\r\n        return '<div id=\"~_Permissions\"></div>';\r\n    }\r\n}\r\n\r\nexport interface RolePermissionDialogOptions {\r\n    roleID?: number;\r\n    title?: string;\r\n}", "\uFEFFimport { proxyTexts } from \"@serenity-is/corelib/q\";\r\n\r\nnamespace Rio.Texts {\r\n\r\n    export declare namespace Db {\r\n\r\n        namespace Administration {\r\n\r\n            namespace Language {\r\n                export const Id: string;\r\n                export const LanguageId: string;\r\n                export const LanguageName: string;\r\n            }\r\n\r\n            namespace Role {\r\n                export const RoleId: string;\r\n                export const RoleKey: string;\r\n                export const RoleName: string;\r\n                export const TenantId: string;\r\n            }\r\n\r\n            namespace RolePermission {\r\n                export const PermissionKey: string;\r\n                export const RoleId: string;\r\n                export const RolePermissionId: string;\r\n                export const RoleRoleName: string;\r\n            }\r\n\r\n            namespace Tenant {\r\n                export const TenantId: string;\r\n                export const TenantName: string;\r\n            }\r\n\r\n            namespace Translation {\r\n                export const CustomText: string;\r\n                export const EntityPlural: string;\r\n                export const Key: string;\r\n                export const OverrideConfirmation: string;\r\n                export const SaveChangesButton: string;\r\n                export const SourceLanguage: string;\r\n                export const SourceText: string;\r\n                export const TargetLanguage: string;\r\n                export const TargetText: string;\r\n            }\r\n\r\n            namespace User {\r\n                export const DisplayName: string;\r\n                export const Email: string;\r\n                export const ImpersonationToken: string;\r\n                export const InsertDate: string;\r\n                export const InsertUserId: string;\r\n                export const IsActive: string;\r\n                export const LastDirectoryUpdate: string;\r\n                export const MobilePhoneNumber: string;\r\n                export const MobilePhoneVerified: string;\r\n                export const Password: string;\r\n                export const PasswordConfirm: string;\r\n                export const PasswordHash: string;\r\n                export const PasswordSalt: string;\r\n                export const Roles: string;\r\n                export const Source: string;\r\n                export const TenantId: string;\r\n                export const TenantName: string;\r\n                export const TwoFactorAuth: string;\r\n                export const UpdateDate: string;\r\n                export const UpdateUserId: string;\r\n                export const UserId: string;\r\n                export const UserImage: string;\r\n                export const Username: string;\r\n            }\r\n\r\n            namespace UserPermission {\r\n                export const Granted: string;\r\n                export const PermissionKey: string;\r\n                export const User: string;\r\n                export const UserId: string;\r\n                export const UserPermissionId: string;\r\n                export const Username: string;\r\n            }\r\n\r\n            namespace UserRole {\r\n                export const RoleId: string;\r\n                export const User: string;\r\n                export const UserId: string;\r\n                export const UserRoleId: string;\r\n                export const Username: string;\r\n            }\r\n        }\r\n    }\r\n\r\n    export declare namespace Forms {\r\n\r\n        namespace Membership {\r\n\r\n            namespace ChangePassword {\r\n                export const FormTitle: string;\r\n                export const SubmitButton: string;\r\n                export const Success: string;\r\n            }\r\n\r\n            namespace ForgotPassword {\r\n                export const BackToLogin: string;\r\n                export const FormInfo: string;\r\n                export const FormTitle: string;\r\n                export const SubmitButton: string;\r\n                export const Success: string;\r\n            }\r\n\r\n            namespace Login {\r\n                export const FacebookButton: string;\r\n                export const ForgotPassword: string;\r\n                export const GoogleButton: string;\r\n                export const LoginToYourAccount: string;\r\n                export const OR: string;\r\n                export const RememberMe: string;\r\n                export const SignInButton: string;\r\n                export const SignUpButton: string;\r\n            }\r\n\r\n            namespace ResetPassword {\r\n                export const BackToLogin: string;\r\n                export const EmailSubject: string;\r\n                export const FormTitle: string;\r\n                export const SubmitButton: string;\r\n                export const Success: string;\r\n            }\r\n\r\n            namespace SignUp {\r\n                export const AcceptTerms: string;\r\n                export const ActivateEmailSubject: string;\r\n                export const ActivationCompleteMessage: string;\r\n                export const BackToLogin: string;\r\n                export const ConfirmEmail: string;\r\n                export const ConfirmPassword: string;\r\n                export const DisplayName: string;\r\n                export const Email: string;\r\n                export const FormInfo: string;\r\n                export const FormTitle: string;\r\n                export const Password: string;\r\n                export const SubmitButton: string;\r\n                export const Success: string;\r\n            }\r\n        }\r\n    }\r\n\r\n    export declare namespace Navigation {\r\n        export const LogoutLink: string;\r\n        export const SiteTitle: string;\r\n    }\r\n\r\n    export declare namespace Site {\r\n\r\n        namespace AccessDenied {\r\n            export const ClickToChangeUser: string;\r\n            export const ClickToLogin: string;\r\n            export const LackPermissions: string;\r\n            export const NotLoggedIn: string;\r\n            export const PageTitle: string;\r\n        }\r\n\r\n        namespace BasicProgressDialog {\r\n            export const CancelTitle: string;\r\n            export const PleaseWait: string;\r\n        }\r\n\r\n        namespace BulkServiceAction {\r\n            export const AllHadErrorsFormat: string;\r\n            export const AllSuccessFormat: string;\r\n            export const ConfirmationFormat: string;\r\n            export const ErrorCount: string;\r\n            export const NothingToProcess: string;\r\n            export const SomeHadErrorsFormat: string;\r\n            export const SuccessCount: string;\r\n        }\r\n\r\n        namespace Dashboard {\r\n            export const ContentDescription: string;\r\n        }\r\n\r\n        namespace Dialogs {\r\n            export const PendingChangesConfirmation: string;\r\n        }\r\n\r\n        namespace Layout {\r\n            export const FooterCopyright: string;\r\n            export const FooterInfo: string;\r\n            export const FooterRights: string;\r\n            export const GeneralSettings: string;\r\n            export const Language: string;\r\n            export const Theme: string;\r\n            export const ThemeAzure: string;\r\n            export const ThemeAzureLight: string;\r\n            export const ThemeBlack: string;\r\n            export const ThemeBlackLight: string;\r\n            export const ThemeBlue: string;\r\n            export const ThemeBlueLight: string;\r\n            export const ThemeCosmos: string;\r\n            export const ThemeCosmosLight: string;\r\n            export const ThemeGlassy: string;\r\n            export const ThemeGlassyLight: string;\r\n            export const ThemeGreen: string;\r\n            export const ThemeGreenLight: string;\r\n            export const ThemePurple: string;\r\n            export const ThemePurpleLight: string;\r\n            export const ThemeRed: string;\r\n            export const ThemeRedLight: string;\r\n            export const ThemeYellow: string;\r\n            export const ThemeYellowLight: string;\r\n        }\r\n\r\n        namespace RolePermissionDialog {\r\n            export const DialogTitle: string;\r\n            export const EditButton: string;\r\n            export const SaveSuccess: string;\r\n        }\r\n\r\n        namespace UserDialog {\r\n            export const EditPermissionsButton: string;\r\n            export const EditRolesButton: string;\r\n        }\r\n\r\n        namespace UserPermissionDialog {\r\n            export const DialogTitle: string;\r\n            export const Grant: string;\r\n            export const Permission: string;\r\n            export const Revoke: string;\r\n            export const SaveSuccess: string;\r\n        }\r\n\r\n        namespace UserRoleDialog {\r\n            export const DialogTitle: string;\r\n            export const SaveSuccess: string;\r\n        }\r\n\r\n        namespace ValidationError {\r\n            export const Title: string;\r\n        }\r\n    }\r\n\r\n    export declare namespace Validation {\r\n        export const AuthenticationError: string;\r\n        export const CantFindUserWithEmail: string;\r\n        export const CurrentPasswordMismatch: string;\r\n        export const DeleteForeignKeyError: string;\r\n        export const EmailConfirm: string;\r\n        export const EmailInUse: string;\r\n        export const InvalidActivateToken: string;\r\n        export const InvalidResetToken: string;\r\n        export const MinRequiredPasswordLength: string;\r\n        export const SavePrimaryKeyError: string;\r\n    }\r\n\r\n    Rio['Texts'] = proxyTexts(Texts, '', {Db:{Administration:{Language:{Id:1,LanguageId:1,LanguageName:1},Role:{RoleId:1,RoleKey:1,RoleName:1,TenantId:1},RolePermission:{PermissionKey:1,RoleId:1,RolePermissionId:1,RoleRoleName:1},Tenant:{TenantId:1,TenantName:1},Translation:{CustomText:1,EntityPlural:1,Key:1,OverrideConfirmation:1,SaveChangesButton:1,SourceLanguage:1,SourceText:1,TargetLanguage:1,TargetText:1},User:{DisplayName:1,Email:1,ImpersonationToken:1,InsertDate:1,InsertUserId:1,IsActive:1,LastDirectoryUpdate:1,MobilePhoneNumber:1,MobilePhoneVerified:1,Password:1,PasswordConfirm:1,PasswordHash:1,PasswordSalt:1,Roles:1,Source:1,TenantId:1,TenantName:1,TwoFactorAuth:1,UpdateDate:1,UpdateUserId:1,UserId:1,UserImage:1,Username:1},UserPermission:{Granted:1,PermissionKey:1,User:1,UserId:1,UserPermissionId:1,Username:1},UserRole:{RoleId:1,User:1,UserId:1,UserRoleId:1,Username:1}}},Forms:{Membership:{ChangePassword:{FormTitle:1,SubmitButton:1,Success:1},ForgotPassword:{BackToLogin:1,FormInfo:1,FormTitle:1,SubmitButton:1,Success:1},Login:{FacebookButton:1,ForgotPassword:1,GoogleButton:1,LoginToYourAccount:1,OR:1,RememberMe:1,SignInButton:1,SignUpButton:1},ResetPassword:{BackToLogin:1,EmailSubject:1,FormTitle:1,SubmitButton:1,Success:1},SignUp:{AcceptTerms:1,ActivateEmailSubject:1,ActivationCompleteMessage:1,BackToLogin:1,ConfirmEmail:1,ConfirmPassword:1,DisplayName:1,Email:1,FormInfo:1,FormTitle:1,Password:1,SubmitButton:1,Success:1}}},Navigation:{LogoutLink:1,SiteTitle:1},Site:{AccessDenied:{ClickToChangeUser:1,ClickToLogin:1,LackPermissions:1,NotLoggedIn:1,PageTitle:1},BasicProgressDialog:{CancelTitle:1,PleaseWait:1},BulkServiceAction:{AllHadErrorsFormat:1,AllSuccessFormat:1,ConfirmationFormat:1,ErrorCount:1,NothingToProcess:1,SomeHadErrorsFormat:1,SuccessCount:1},Dashboard:{ContentDescription:1},Dialogs:{PendingChangesConfirmation:1},Layout:{FooterCopyright:1,FooterInfo:1,FooterRights:1,GeneralSettings:1,Language:1,Theme:1,ThemeAzure:1,ThemeAzureLight:1,ThemeBlack:1,ThemeBlackLight:1,ThemeBlue:1,ThemeBlueLight:1,ThemeCosmos:1,ThemeCosmosLight:1,ThemeGlassy:1,ThemeGlassyLight:1,ThemeGreen:1,ThemeGreenLight:1,ThemePurple:1,ThemePurpleLight:1,ThemeRed:1,ThemeRedLight:1,ThemeYellow:1,ThemeYellowLight:1},RolePermissionDialog:{DialogTitle:1,EditButton:1,SaveSuccess:1},UserDialog:{EditPermissionsButton:1,EditRolesButton:1},UserPermissionDialog:{DialogTitle:1,Grant:1,Permission:1,Revoke:1,SaveSuccess:1},UserRoleDialog:{DialogTitle:1,SaveSuccess:1},ValidationError:{Title:1}},Validation:{AuthenticationError:1,CantFindUserWithEmail:1,CurrentPasswordMismatch:1,DeleteForeignKeyError:1,EmailConfirm:1,EmailInUse:1,InvalidActivateToken:1,InvalidResetToken:1,MinRequiredPasswordLength:1,SavePrimaryKeyError:1}}) as any;\r\n}\r\n\r\nexport const Texts = Rio.Texts;\r\n", "import { RoleRow, RoleForm, RoleService } from \"../\";\r\nimport { RolePermissionDialog } from \"../RolePermission/RolePermissionDialog\";\r\nimport { Texts } from \"../../ServerTypes/Texts\"\r\nimport { Decorators, EntityDialog } from \"@serenity-is/corelib\";\r\n\r\nconst editPermissions = \"edit-permissions\";\r\n\r\n@Decorators.registerClass()\r\nexport class RoleDialog extends EntityDialog<RoleRow, any> {\r\n    protected getFormKey() { return RoleForm.formKey; }\r\n    protected getIdProperty() { return RoleRow.idProperty; }\r\n    protected getLocalTextPrefix() { return RoleRow.localTextPrefix; }\r\n    protected getNameProperty() { return RoleRow.nameProperty; }\r\n    protected getService() { return RoleService.baseUrl; }\r\n\r\n    protected form = new RoleForm(this.idPrefix);\r\n\r\n    protected getToolbarButtons()\r\n    {\r\n        let buttons = super.getToolbarButtons();\r\n\r\n        buttons.push({\r\n            title: Texts.Site.RolePermissionDialog.EditButton,\r\n            cssClass: editPermissions,\r\n            icon: 'fa-lock text-green',\r\n            onClick: () =>\r\n            {\r\n                new RolePermissionDialog({\r\n                    roleID: this.entity.RoleId,\r\n                    title: this.entity.RoleName\r\n                }).dialogOpen();\r\n            }\r\n        });\r\n\r\n        return buttons;\r\n    }\r\n\r\n    protected updateInterface() {\r\n        super.updateInterface();\r\n\r\n        this.toolbar.findButton(editPermissions).toggleClass(\"disabled\", this.isNewOrDeleted());\r\n    }\r\n}", "import { RoleDialog } from \"./RoleDialog\";\r\nimport { RoleColumns, RoleRow, RoleService } from \"../\";\r\nimport { Decorators, EntityGrid } from \"@serenity-is/corelib\";\r\n\r\n@Decorators.registerClass()\r\nexport class RoleGrid extends EntityGrid<RoleRow, any> {\r\n    protected getColumnsKey() { return RoleColumns.columnsKey; }\r\n    protected getDialogType() { return RoleDialog; }\r\n    protected getIdProperty() { return RoleRow.idProperty; }\r\n    protected getLocalTextPrefix() { return RoleRow.localTextPrefix; }\r\n    protected getService() { return RoleService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getDefaultSortBy() {\r\n        return [RoleRow.Fields.RoleName];\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_q", "RolePermissionDialog", "opt", "PermissionCheckEditor", "RolePermissionService", "response", "x", "e", "__decorateClass", "import_q", "Rio", "Texts", "import_corelib", "editPermissions", "RoleDialog", "RoleForm", "RoleRow", "RoleService", "buttons", "Texts", "RolePermissionDialog", "__decorateClass", "import_corelib", "RoleGrid", "RoleColumns", "RoleDialog", "RoleRow", "RoleService", "container", "__decorateClass", "RoleGrid"]
}
